message Cidr4 {
  required uint32 ip = 1;
  required uint32 length = 2;
}
message Ipv6 {
  required uint64 networkaddr = 1;
  required uint64 hostaddr = 2;
}
message Cidr6 {
  required Ipv6 ip = 1;
  required uint32 length = 2;
}

message AddRoute4Request {
  required Cidr4 cidr = 1;
  required uint32 via = 2;
  required uint32 port = 3;
}
message AddRoute4Result {
}

message AddRoute6Request {
  required Cidr6 cidr = 1;
  required uint32 via = 2;
  required uint32 port = 3;
}
message AddRoute6Result {
}

message GetIfaceRequest {
  required uint32 portid = 1;
}

message QueueStats {
  required uint64 ipackets = 1;
  required uint64 opackets = 2;
  required uint64 ibytes   = 3;
  required uint64 obytes   = 4;
  required uint64 errors   = 5;
 }

message GetIfaceResult {
  required uint32 portid          = 1;

  required uint64 ipackets        = 2;
  required uint64 opackets        = 3;
  required uint64 ibytes          = 4;
  required uint64 obytes          = 5;
  required uint64 imissed         = 6;
  required uint64 ibadcrc         = 7;
  required uint64 ibadlen         = 8;
  required uint64 ierrors         = 9;
  required uint64 imcasts         = 10;
  required uint64 rx_nombuf       = 11;
  required uint64 fdirmatch       = 12;
  required uint64 fdirmiss        = 13;

  required uint64 tx_pause_xon    = 14;
  required uint64 rx_pause_xon    = 15;
  required uint64 tx_pause_xoff   = 16;
  required uint64 rx_pause_xoff   = 17;

  repeated QueueStats queue_stats = 18;

  required uint64 ilbpackets      = 19;
  required uint64 olbpackets      = 20;
  required uint64 ilbbytes        = 21;
  required uint64 olbbytes        = 22;
}

service Router {
  rpc AddRoute4 (AddRoute4Request) returns (AddRoute4Result);
//  rpc AddRoute6 (AddRoute6Request) returns (AddRoute6Result);

  rpc GetIfaceStatus (GetIfaceRequest) returns (GetIfaceResult);
}
