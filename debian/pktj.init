#! /bin/sh
### BEGIN INIT INFO
# Provides:          pktj
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="pktj"
NAME=pktj
DAEMON=/usr/sbin/$NAME
SCRIPTNAME=/etc/init.d/$NAME
PIDFILE=/var/run/pktj.pid

NSNAME=pktj
NSEXEC="/bin/ip netns exec $NSNAME"

EAL_ARGS="--log-level 8 -l 0,1,2,3 -n 1"
L3FWD_ARGS="-f /etc/pktj.conf"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load default options
[ -f /etc/default/pktj ] && . /etc/default/pktj

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	# Create namespace if not exists

	if [ -n "$DEVICE_BOUND_OPT" ]; then
		/usr/bin/dpdk_nic_bind $DEVICE_BOUND_OPT
	fi

	[ ! -f /var/run/netns/$NSNAME ] && ip netns add $NSNAME
	if [ ! -f /var/run/netns/$NSNAME ] ; then
		echo "Could not create namespace $NSNAME, aborting..."
		return 2
	fi

	if [ -f $PIDFILE ] ; then
		if pidofproc -p $PIDFILE "$DAEMON" > /dev/null 2>&1 ; then
			return 1
		fi
	fi

	$NSEXEC start-stop-daemon --start --quiet --background --pidfile $PIDFILE --make-pidfile --name $NAME --exec $DAEMON -- \
		$EAL_ARGS -- $L3FWD_ARGS \
		|| return 2

	return 0
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred

	if [ -f $PIDFILE ] ; then
		if ! pidofproc -p $PIDFILE "$DAEMON" > /dev/null 2>&1 ; then
			return 1
		fi
	else
		return 1
	fi

	start-stop-daemon --stop --quiet --retry=TERM/30/QUIT/5  --pidfile $PIDFILE --exec $DAEMON
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2
	# Wait for children to finish too if this is a daemon that forks
	# and if the daemon is only ever run from this initscript.
	start-stop-daemon --stop --quiet --oknodo --retry=0/30/QUIT/5 --exec $DAEMON
	[ "$?" = 2 ] && return 2

	[ -f /var/run/netns/$NSNAME ] && ip netns delete $NSNAME

	if [ -n "$DEVICE_UNBOUND_OPT" ]; then
		/usr/bin/dpdk_nic_bind $DEVICE_UNBOUND_OPT
	fi

	return "$RETVAL"
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" "$NAME\n"
	do_start
	case "$?" in
		0) log_end_msg 0 ;;
		1|2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME\n"
	do_stop
	case "$?" in
		0) log_end_msg 0 ;;
		1|2) log_end_msg 1 ;;
	esac
	;;
  restart)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  status)
	status_of_proc -p $PIDFILE $DAEMON $NAME
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|status}" >&2
	exit 3
	;;
esac
