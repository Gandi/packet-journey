#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
# DH_VERBOSE=1

export DH_OPTIONS

# see EXAMPLES in dpkg-buildflags(1) and read /usr/share/dpkg/*
DPKG_EXPORT_BUILDFLAGS = 1

RTE_TARGET ?= pktj
RTE_SDK    ?= /usr/share/dpdk

include /usr/share/dpkg/default.mk

# main packaging script based on dh7 syntax
%:
	dh $@

override_dh_auto_configure:

override_dh_auto_build: dh_auto_build/pktj

.PHONY: dh_auto_build/pktj
dh_auto_build/pktj:
	make

override_dh_auto_test:
override_dh_auto_clean:
	rm -rf $(CURDIR)/build/

override_dh_auto_install: dh_auto_install/pktj

.PHONY: dh_auto_install/pktj
dh_auto_install/pktj:
	mkdir -p $(CURDIR)/debian/pktj/usr/sbin
	mkdir -p $(CURDIR)/debian/pktj/usr/lib
	cp $(CURDIR)/scripts/*.py $(CURDIR)/debian/pktj/usr/sbin/
	mv $(CURDIR)/build/app/$(RTE_TARGET)/pktj $(CURDIR)/debian/pktj/usr/sbin/
	mv $(CURDIR)/build/lib/libnetlink/$(RTE_TARGET)/lib/* $(CURDIR)/debian/pktj/usr/lib
	mv $(CURDIR)/build/lib/libneighbour/$(RTE_TARGET)/lib/* $(CURDIR)/debian/pktj/usr/lib

override_dh_shlibdeps:

override_dh_installinit:
	dh_installinit --no-start --name=pktj

.PHONY: override_dh_strip
override_dh_strip:
	dh_strip -p "pktj" --dbg-package=pktj-dbg
